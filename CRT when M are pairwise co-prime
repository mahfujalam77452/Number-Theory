pair<int,int> Chinese_Remainde_Theorem(vector<int>A,vector<int>M)
{
     /** Invalid input*/
    if(A.size()!=M.size())return {-1,-1};
    int n=A.size();
    int a1=A[0];
    int m1=M[0];
    /** Initially x = a_0 (mod m_0)*/
 
    /** Merge the solution with remaining equations */
    for(int i=1;i<n;i++){
        int a2=A[i];
        int m2=M[i];
        /** Merge the two equations*/
        int p,q;
        ext_gcd(m1,m2,&p,&q);
        /** We need to be careful about overflow,
        but I did not bother about overflow here to keep the code simple.*/
        int x=(a1*m2*q+a2*m1*p)%(m1*m2);
        /** Merged equation*/
        a1=x;
        m1=m1*m2;
    }
    if(a1<0)a1+=m1;/** Result is not suppose to be negative*/
    return {a1,m1};
}
